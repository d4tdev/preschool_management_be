<?php

namespace App\Exceptions;

use Illuminate\Foundation\Exceptions\Handler as ExceptionHandler;
use Symfony\Component\HttpFoundation\Response;
use Throwable;

class Handler extends ExceptionHandler
{
    /**
     * The list of the inputs that are never flashed to the session on validation exceptions.
     *
     * @var array<int, string>
     */
    protected $dontFlash = [
        'current_password',
        'password',
        'password_confirmation',
    ];

    /**
     * Register the exception handling callbacks for the application.
     */
    public function register(): void
    {
        $this->reportable(function (Throwable $e) {
            //
        });
    }

    public function render($request, Throwable $e)
    {
        if ($request->wantsJson() || $request->ajax() || $request->isJson()) {
            if (!empty($e->getMessage()) && !empty($e->getCode())) {
                return response()->json([
                    'message' => $e->getMessage(),
                    'status' => $e->getCode(),
                ], $e->getCode());
            }

            return response()->json([
                'message' => 'internal.server.error',
                'status' => Response::HTTP_INTERNAL_SERVER_ERROR,
                'stack' => $e->getMessage(),
            ], Response::HTTP_INTERNAL_SERVER_ERROR);
        }
        return parent::render($request, $e); // TODO: Change the autogenerated stub
    }
}
